# Check for required values by rendering them
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "notes.secretName" . }}
type: Opaque
stringData:
# Check for required values but dont render them.  Just dumb render the contents of Values.app.config if all required secrets are present
  edx_notes_api.yml: |-
{{ toYaml .Values.app.config | indent 4 }}
  required: |-
    variables:
{{- required "A valid .Values.app.config.SECRET_KEY entry required!" .Values.app.config.SECRET_KEY  | indent 6 }}
{{- required "A valid .Values.app.config.DATABASES.default.PASSWORD entry required!" .Values.app.config.DATABASES.default.PASSWORD   | indent 6 }}
{{- required "A valid .Values.app.config.CLIENT_ID entry required!" .Values.app.config.CLIENT_ID   | indent 6 }}
{{- required "A valid .Values.app.config.CLIENT_SECRET entry required!" .Values.app.config.CLIENT_SECRET   | indent 6 }}

# This is a direct copy from the stable mysql chart with the auto gen removed
# We create a secret for mysql and set the chart to use our secret so we can pass
# it in through values.yaml.
# We can't autogen because we need to share the secret across both services.
# So we've marked it as required above instead.
{{ if .Values.mysql.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "notes-mysql.secretName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "mysql.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  {{ if .Values.mysql.mysqlRootPassword }}
  mysql-root-password:  {{ .Values.mysql.mysqlRootPassword | b64enc | quote }}
  {{ else }}
  mysql-root-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{ end }}
  mysql-password:  {{ .Values.app.config.DATABASES.default.PASSWORD | b64enc | quote }}

{{- if .Values.mysql.ssl.enabled }}
{{ if .Values.mysql.ssl.certificates }}
{{- range .Values.mysql.ssl.certificates }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
  labels:
    app: {{ template "mysql.fullname" $ }}
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    release: "{{ $.Release.Name }}"
    heritage: "{{ $.Release.Service }}"
type: Opaque
data:
  ca.pem: {{ .ca | b64enc }}
  server-cert.pem: {{ .cert | b64enc }}
  server-key.pem: {{ .key | b64enc }}
{{- end }} # end range .Values.mysql.ssl.certificates
{{- end }} # end if .Values.mysql.ssl.certificates
{{- end }} # end if .Values.mysql.ssl.enabled
{{- end }} # end if .Values.mysql.enabled
